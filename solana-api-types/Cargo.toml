[package]
edition = "2018"
name = "solana-api-types"
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
onchain = []
# Enables cryptographic API for transaction signing
crypto = [
    "extended",
    "sha2",
    "sha3",
    "ed25519-dalek",
    "rand"
]
# Enables extended functionality that might not be available under non-x86 targets, such as WASM or BPF
extended = [
    "curve25519-dalek"
]
runtime-test = [
    "crypto",
    "solana-sdk",
    "solana-program",
    "solana-program-test",
]

[dependencies]
async-trait = "0.1"
base64 = "0.12"
bincode = "1.3"
bs58 = "0.4"
generic-array = {version = "0.14.3", default-features = false, features = ["serde", "more_lengths"]}
reqwest = "0.11"
serde = {version = "^1.0", features = ["derive"]}
serde_bytes = "0.11"
serde_derive = "^1.0"
serde_json = "1.0"
serde-big-array = { version = "0.3.2", features = ["const-generics"] }
anyhow = "1.0"
thiserror = "1.0"
# zstd не билдится под wasm, поэтому нашел реализацию декодера на чистом расте.
# zstd = {version = "0.5", features = ["wasm"]}
lazy_static = "1.4"
ruzstd = "0.2"
wasm-bindgen = "0.2"
itertools = "0.10"

solar-macros = {path = "../solar-macros"}

rand = { version = "0.7", optional = true }
curve25519-dalek = { version = "2.1.0", optional = true }
ed25519-dalek = { version = "=1.0.1", optional = true }
ed25519-dalek-bip32 = { version = "0.1.1", optional = true }
sha2 = { version = "0.9.2", optional = true }
sha3 = { version = "0.9.1", optional = true }

solana-sdk = {version = "1.7.2", optional = true}
solana-program = {version = "1.7.2", optional = true}
solana-program-test = {version = "1.7.2", optional = true}

[dev-dependencies]
assert_matches = "1.3"
